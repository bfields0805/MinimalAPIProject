using ERS.Model;
using System.Data.SqlClient;

namespace ERS.DataControler
{
    public class SqlRepository : IRepository
    {
        readonly string _connectionString;
        public SqlRepository(string connection)
        {
            this._connectionString = connection ??
                        throw new ArgumentNullException(nameof(connection));

        }
        /// <summary>
        /// Returns all tickets in the database
        /// </summary>
        /// <returns>
        /// List of type Ticket
        /// </returns>
        public IEnumerable<Ticket> getAllTickets()
        {
            Ticket t = new Ticket();
            List<Ticket> result = new List<Ticket>();

            using SqlConnection connection = new SqlConnection(this._connectionString);
            connection.Open();
            using SqlCommand cmd = new SqlCommand("SELECT Ticket_ID, About_Data, Amount," +
                                                   "Ticket_Status, FK_UserId FROM ERS.TICKET", connection);
            SqlDataReader reader = cmd.ExecuteReader();
            while (reader.Read())
            {
                t.id = reader.GetInt32(0);
                t.data = reader.GetString(1);
                t.amount = (double)reader.GetDecimal(2);
                t.status = (TicketStatus)reader.GetInt32(3);
                t.employee = reader.GetInt32(4);

                result.Add(t);
            }
            connection.Close();

            return result;
        }
        /// <summary>
        /// Returns a List<T> of Type Ticket that were generated by
        /// a specific user.
        /// </summary>
        /// <param name="id">
        ///  The User_ID of the User
        /// </param>
        /// <returns>
        /// List Type Ticket generated by a single user
        /// </returns>
        public IEnumerable<Ticket> GetMyTickets(int id)
        {
            List<Ticket> result = new List<Ticket>();

            Ticket t = new Ticket();
            using SqlConnection connection = new SqlConnection(this._connectionString);
            connection.Open();


            using SqlCommand cmd = new SqlCommand("SELECT Ticket_ID, About_Data, Amount," +
                                                   "Ticket_Status, FK_UserId FROM ERS.TICKET" +
                                                   " WHERE FK_UserId = @id", connection);

            cmd.Parameters.AddWithValue("@id", id);
            SqlDataReader reader = cmd.ExecuteReader();
            while (reader.Read())
            {
                t.id = reader.GetInt32(0);
                t.data = reader.GetString(1);
                t.amount = (double)reader.GetDecimal(2);
                t.status = (TicketStatus)reader.GetInt32(3);
                t.employee = reader.GetInt32(4);

                result.Add(t);
            }
            connection.Close();


            return result;
        }

        /// <summary>
        /// Retrieves a specific ticket from the database
        /// </summary>
        /// <param name="id">
        ///  The Ticket_ID of the ticket requested
        /// </param>
        /// <returns>
        ///  A Ticket Object
        /// </returns>
        public Ticket GetTicketById(int id)
        {
            Ticket t = new Ticket();
            using SqlConnection connection = new SqlConnection(this._connectionString);
            connection.Open();

            string cmd = "SELECT Ticket_ID, Amount, About_Data, Ticket_Status, FK_UserId " +
                "WHERE Ticket_ID = @id";
            using SqlCommand command = new SqlCommand(cmd, connection);
            command.Parameters.AddWithValue("@id", id);

            SqlDataReader reader = command.ExecuteReader();
            // Ticket(int id, string data, double amount, int employee, TicketStatus status)
            while (reader.Read())
            {
                t = new Ticket(reader.GetInt32(0), reader.GetString(2),
                   (double)reader.GetDecimal(1), reader.GetInt32(4),
                   (TicketStatus)reader.GetInt32(3));
            }
            connection.Close();
            return t;
        }

        public bool ChangeTicketStatus(int id)
        {
            using SqlConnection connection =new SqlConnection(this._connectionString);
            connection.Open();

            return false;
        }

        /// <summary>
        /// Submits a new Ticket object to the database
        /// </summary>
        /// <param name="t">
        ///  The Ticket object added to the database
        /// </param>
        /// <param name="Id">
        ///  The User_ID of the employee that created the Ticket object.
        /// </param>
        public void AddNewTicket(Ticket t, int Id)
        {
            using SqlConnection connection = new SqlConnection(this._connectionString);
            connection.Open();

            string cmdText = "INSERT INTO ERS.TICKET (About_Data, Amount, " +
                "Ticket_Status, FK_UserId)" +
                " VALUES (@data, @amount, @status, @id) ";

            using SqlCommand command = new SqlCommand(cmdText, connection);

            command.Parameters.AddWithValue("@data", t.data);
            command.Parameters.AddWithValue("@amount", t.amount);
            command.Parameters.AddWithValue("@status", ((int)t.status));
            command.Parameters.AddWithValue("@id", Id);

            command.ExecuteNonQuery();

            connection.Close();
        }
        /// <summary>
        /// 
        /// </summary>
        /// <returns></returns>
        public IEnumerable<User> GetAllUsers()
        {
            List<User> users = new List<User>();
            User u = new User();

            SqlConnection connection = new SqlConnection(this._connectionString);
            connection.Open();

            string cmd = "SELECT User_ID, User_Name, User_Email, User_pswd, User_Manager"
                           + "FROM ERS.USERS";

            SqlCommand command = new SqlCommand(cmd, connection);
            SqlDataReader reader = command.ExecuteReader();

            while(reader.Read())
            {
                u.empId = reader.GetInt32(0);
                u.userName = reader.GetString(1);
                u.email = reader.GetString(2);
                u.password = reader.GetString(3);
                u.isManager = (reader.GetInt32(4) == 0 ? false : true);

                users.Add(u);
            }
            reader.Close();

            return users;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        public User GetUserById (int id)
        {
            User u= new User();
            SqlConnection connection = new SqlConnection(this._connectionString);
            connection.Open();

            string cmd = "SELECT User_ID, User_Name, User_Email, User_pswd, User_Manager"
                           +"FROM ERS.USERS " +
                           "WHERE User_ID = @id";

            SqlCommand command = new SqlCommand(cmd, connection);
            command.Parameters.AddWithValue("@id", id);

            SqlDataReader reader = command.ExecuteReader();
            while(reader.Read())
            {
                u.empId = reader.GetInt32(0);
                u.userName = reader.GetString(1);
                u.email = reader.GetString(2);
                u.password = reader.GetString(3);
                u.isManager = (reader.GetInt32 (4) == 0 ? false : true);
            }
            connection.Close();

            return u;
        }

        /// <summary>
        /// Adds a new user to the database. Then retrieves the correct ID number
        /// of the user object, and assigns it to the object.
        /// </summary>
        /// <param name="u"> 
        /// The new User object
        /// </param>
        /// <returns> 
        /// Newly created User object with correct ID
        /// </returns>
        public User CreateNewUser(User u)
        {

            SqlConnection connection = new SqlConnection(this._connectionString);
            connection.Open();

            //add User to database
            string cmd1 = "INSERT INTO ERS.USERS (User_Name, User_pswd, User_Email, User_Manager)" +
                "VALUES (@name, @pswd, @email, @manager)";

            SqlCommand command = new SqlCommand(cmd1, connection);

            command.Parameters.AddWithValue("@name", u.userName);
            command.Parameters.AddWithValue("@pswd", u.password);
            command.Parameters.AddWithValue("@email", u.email);
            command.Parameters.AddWithValue("@manager", (u.isManager) ? 1 : 0);

            command.ExecuteNonQuery();

            //get Users correct ID from auto generated Database; assign id to correct field

            string cmd2 = "SELECT User_ID FROM ERS.USERS " +
                          "WHERE User_Email = @email";
            command = new SqlCommand(cmd2, connection);
            command.Parameters.AddWithValue("@email", u.email);

            SqlDataReader reader = command.ExecuteReader();

            while (reader.Read())
            {
                u.empId = reader.GetInt32(0);
            }

            connection.Close();
            return u;
        }




    }
}